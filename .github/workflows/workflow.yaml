name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: macos-latest

    strategy:
      matrix:
        python-version: [ '3.10.10' ]  # '3.6.7' failing with mysterious error on poetry installation; '3.11.2' does not pass 'test_asciiization' pytest

    steps:
      #----------------------------------------------
      #       check-out repo
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3

      #----------------------------------------------
      #       set up python
      #----------------------------------------------
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #         install & configure poetry
      #   https://github.com/snok/install-poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #----------------------------------------------
      #       load cached venv if exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          make test

      #----------------------------------------------
      #              Upload to codecov
      # https://github.com/codecov/codecov-action
      #----------------------------------------------
      - name: Upload to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          verbose: true